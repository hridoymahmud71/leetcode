
# https://leetcode.com/problems/3sum-closest/

from typing import List


class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:

        nums.sort()
        globalClosestSum = nums[0] + nums[1] + nums[2]

        for i in range(len(nums)):

            lptr = i + 1
            rptr = len(nums) - 1

            while (lptr < rptr):

                localSum = nums[i] + nums[lptr] + nums[rptr]

                if localSum == target:
                    return target
                
                # if the gap between localsum and target is lesser than the gap between globalsum and target then ,
                # localsum will become new globalsum
                if abs(localSum - target) < abs(globalClosestSum - target):

                    globalClosestSum = localSum

                # separate
                if localSum < target:
                    lptr += 1
                else:
                    rptr -= 1

        return globalClosestSum


# driver code
nums = [-593,973,-526,683,538,-80,292,77,145,204,464,-455,-536,-277,7,114,-837,671,420,-730,111,950,-778,-71,644,-295,876,248,689,984,509,-144,449,672,791,772,592,-465,242,834,-690,-809,510,-995,-316,-301,-405,844,-577,-515,-689,351,566,-994,-765,-332,-528,928,756,64,958,872,-84,542,-679,-882,670,-123,577,878,-736,-903,771,380,-154,439,-510,863,11,183,-922,-868,-370,429,417,31,-914,529,200,622,-479,-702,-613,-8,-589,-452,-222,757,-669,-57,-587,-668,988,545,704,-10,-750,-364,557,405,-283,-338,-286,-878,460,-806,156,-450,-700,-341,597,328,-502,895,168,627,221,830,910,556,208,-272,851,567,-42,357,10,-667,-352,237,873,-525,552,-576,558,105,-413,409,-196,-637,55,749,-929,422,341,-311,471,-410,991,34,138,37,926,-724,939,110,-870,424,-175,236,839,-25,570,-946,-654,613,933,12,-805,180,-468,-92,-52,-475,539,194,499,-645,435,87,-518,15,-747,-673,-976,-498,608,-657,-592,-379,452,287,-210,-568,307,563,-37,-358,896,779,-600,-570,112,869,-39,665,716,-478,-139,-180,911,-992,-913,861,-291,264,-718,-100,-467,985,-169,-484,562,-197,821,-235,-830,270,-31,263,291,348,-511,-466,-193,-194,962,837,945,299,163,995,190,-19,-436,888,367,294,-386,486,-202,316,-221,3,-626,-767,-534,780,283,-430,-947,725,-858,810,-282,-304,-119,-659,-890,-892,56,-426,-65,338,265,-288,-12,-598,189,153,427,72,431,179,-764,798,333,356,-422,976,-148,664,-862,-60,-184,-167,154,54,-431,643,540,-979,-875,-361,-829,26,104,-721,-172,-477,-780,286,-267,611,850,583,24,-445,-618,327,39,-697,-228,774,-64,89,-398,167,133,-48,951,918,568,498,586,533,295,-88,454,-471,-755,289,591,881,-249,220,477,701,-168,-306,-53,-448,734,-795,-588,-115,-298,667,-114,582,-399,-473,-954,-164,-300,858,604,-134,207,172,97,708,76,-323,804,855,537,378,877,185,-665,-604,285,-417,-110,953,-265,446,-908,547,90,85,227,-811,-66,824,-397,859,-781,-542,-831,680,27,-58,685,814,852,-753,84,186,-44,-558,-634,899,-6,-67,100,404,315,-1000,-345,469,-712,479,229,366,-297,-54,326,472,-776,594,296,69,-389,396,-49,-264,554,-722,497,700,724,581,-132,-620,823,-34,-104,-279,-964,-742,370,-156,-661,252,-538,-190,-973,-797,397,585,970,-980,-254,-918,-996,-945,290,231,625,275,-82,-457,-241,-416,-715,-560,614,635,8,-233,571,829,118,-650,17,-143,-231,-564,618,730,789,-802,775,727,259,676,731,795,-970,-292,-666,-192,184,893,-129,-535,-309,-791,-865,-789,-359,-63,-43,-508,835,-887,444,-128,841,-893,225,1000,251,403,-944,-504,-274,-726,818,761,-597,932,817,-402,-583,226,359,35,-388,-74,-460,-333,-610,-782,-219,-696,508,161,-420,-69,549,-47,765,-910,-856,-796,-741,528,-911,-440,-869,-259,760,130,-368,-547,428,-2,202,913,-601,698,941,697,660,-242,-79,555,652,306,741,-5,-95,127,-545,-224,-902,-711,710,-211,-270,-532,-3,-40,70,564,0,-655,770,485,511,52,5,-959,-81,147,-35,-881,-733,578,132,-956,989,-73,-355,-572,811,-55,-833,261,729,-438,-209,-919,371,-552,253,-788,-343,115,375,-670,-896,-227,-815,551,38,-958,-503,561,-509,458,754,494,-337,400,384,-151,-276,758,-935,345,19,-925,481,334,-239,300,-965,-487,-432,173,-810,354,423,-120,74,-569,349,696,782,177,188,6,587,-131,938,-176,-113,964,-162,523,318,589,143,921,20,-462,-713,907,28,-201,638,-647,-841,266,-439,-843,313,-313,-103,280,364,693,-491,195,-906,669,796,808,-90,155,-894,-854,-646,718,109,-594,-108,-307,140,705,182,-217,980,-579,-551,419,-330,391,-325,-932,-855,-223,-846,-116,-891,210,-9,-45,385,-229,-447,940,916,483,-371,-118,381,-396,600,565,362,-273,880,-312,146,-540,-566,666,408,885,-801,-449,330,-258,448,-512,75,101,994,751,-253,117,176,842,576,-486,903,-124,232,609,-533,580,-27,990,632,377,541,181,-94,-531,645,867,536,-226,833,209,621,-464,33,343,-912,332,-501,-779,712,-232,-99,-529,517,800,166,-772,389,36,-75,521,308,-362,260,201,942,891,548,500,715,66,373,-36,-615,-641,-218,390,-153,-960,919,-303,-26,-709,897,-857,170,513,650,-876,-245,-933,-373,32,-940,617,-962,-703,-15,763,678,369,352,350,819,-820,661,1,206,-135,898,849,679,-938,157,-683,-553,-328,845,-883,-948,433,407,636,-177,-744,-347,113,870,-314,831,766,588,67,60,-456,317,840,-921,-554,-102,-787,569,-686,-136,-97,447,-608,917,199,-198,134,695,312,-674,-117]
target = 2260
sol = Solution()
res = sol.threeSumClosest(nums, target)
print("solution is ", res)
